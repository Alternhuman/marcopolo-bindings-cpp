CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT( MarcoCPPBinding )
find_package(RapidJSON)

SET( MARCOCPPBINDING_SRC
  ${CMAKE_SOURCE_DIR}/src/marco.cpp
  ${CMAKE_SOURCE_DIR}/src/polo.cpp
)

SET(POLOTEST_SRC
	${CMAKE_SOURCE_DIR}/src/main.cpp
)

INCLUDE_DIRECTORIES( "${CMAKE_SOURCE_DIR}/include" )
INCLUDE_DIRECTORIES( ${CMAKE_BINARY_DIR} )


find_package(PkgConfig REQUIRED)

pkg_search_module(OPENSSL REQUIRED openssl)

if( OPENSSL_FOUND )
    include_directories(${OPENSSL_INCLUDE_DIRS})
    message(STATUS "Using OpenSSL ${OPENSSL_VERSION}")
else()
    # Error; with REQUIRED, pkg_search_module() will throw an error by it's own
endif() #http://stackoverflow.com/a/26534464/2628463


#SET(CMAKE_EXE_LINKER_FLAGS "-Wall -O2 -s")
SET(CMAKE_EXE_LINKER_FLAGS "-g -Wall")
ADD_DEFINITIONS(${CMAKE_EXE_LINKER_FLAGS})

ADD_LIBRARY( marcopolo SHARED ${MARCOCPPBINDING_SRC})
TARGET_LINK_LIBRARIES( marcopolo ${RAPIDJSON_LIBRARIES} ${OPENSSL_LIBRARIES})

ADD_EXECUTABLE(polotest ${POLOTEST_SRC})
TARGET_LINK_LIBRARIES(polotest marcopolo)

INSTALL(TARGETS marcopolo EXPORT marcopolo DESTINATION /usr/lib PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)
INSTALL(EXPORT marcopolo NAMESPACE marcopolo_ DESTINATION /usr/lib/marcopolo)

#http://stackoverflow.com/a/11097012/2628463
file(GLOB DEPLOY_FILES_AND_DIRS "${CMAKE_SOURCE_DIR}/include/*.h*")
foreach(ITEM ${DEPLOY_FILES_AND_DIRS})
    IF( IS_DIRECTORY "${ITEM}" )
       LIST( APPEND DIRS_TO_DEPLOY "${ITEM}" )
    ELSE()
       LIST( APPEND FILES_TO_DEPLOY "${ITEM}" )
    ENDIF()
endforeach()

INSTALL( FILES ${FILES_TO_DEPLOY} DESTINATION /usr/include/marcopolo PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)
INSTALL( DIRECTORY ${DIRS_TO_DEPLOY} DESTINATION /usr/include/marcopolo PATTERN "*" PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)

SET(CMAKE_INSTALL_DIR /usr/include/marcopolo CACHE PATH "The directory cmake fiels are installed in")


export(PACKAGE ${PROJECT_NAME})

SET(LIB_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/lib")
INSTALL(FILES
     ${CMAKE_SOURCE_DIR}/MarcoCPPBindingConfig.cmake
     DESTINATION "${LIB_INSTALL_DIR}/cmake/${PROJECT_NAME}"
)